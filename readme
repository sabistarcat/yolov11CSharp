请阅读该文档,会解决你大部分的疑问

该代码全部使用中文的目的是为了以文档的形式展现全部过程，帮助理解， 代码即文档，如果你的项目不允许使用中文可自行修改。

1.该demo代码使用vs2022和net8框架，请先下载安装可直接从debug下查看效果

2.启用gpu时，先输入索引号，再勾选GPU，我默认是0，如果你的CPU有集显，这可能会调用集显，需要自行确定GPU索引，该索引包含集成显卡，N卡和A卡，它在系统中的顺序是不确定的，你需要自己解决这个问题

3.在debug调试下的速度是很慢的，你需要release编译或发布后，从文件夹中打开测试速度，速度差距会很大

4.如果GPU勾选报错，是因为部分精简的windows系统导致某些库缺失，使用附带的工具按照说明修复即可

5.训练的v8-v10模型，可转换onnx的输出维度来进一步提高推理速度，可查看附带文件的说明

6.为了保证训练的模型不会出现问题，请尽量使用我提供的标注工具和转换工具，按照教程来做，简单又快捷。

7.该库可用于net6-8，和framework4.8，请先将程序改为64位，最低可支持到framework4.6.1，但需要对源码进行大量修改。

8.不建议使用wpf程序，否则你需要对代码进行大量调整，因为我们使用了原生的bitmap类，在wpf中需要改为BitmapImage类来绘制图像，它的效率要远远低于winform，但推理速度不影响，如果你有这方面需要，可以联系作者有偿帮助修改

9.你的硬件水平直接决定了推理速度，请尽量使用更高配置的电脑来提高体验，40系的显卡对ai有很好的加强，工业项目可以考虑40系显卡，4060是性价比最高的选择

10.部分显卡在调用时会出现自动降频，即开始推理速度很快，随之推理速度急速下降到cpu水平，你需要设置一下显卡，如N卡的操作如下【在NVIDIA控制面板中设置以下选项：3D设置-通过预览调整图像质量-使用我的优先选择-性能拉满；管理3D设置-电源管理模式-最高性能优先；低延时模式-超高】

